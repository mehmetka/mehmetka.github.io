"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[71],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=s(t),d=a,h=b["".concat(c,".").concat(d)]||b[d]||u[d]||i;return t?r.createElement(h,l(l({ref:n},p),{},{components:t})):r.createElement(h,l({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},3585:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),l=["components"],o={},c="Deploy with Gitlab Runner",s={unversionedId:"technical/gitlab/gitlab-ci",id:"technical/gitlab/gitlab-ci",title:"Deploy with Gitlab Runner",description:"Define these variables on Gitlab as CI/CD variables",source:"@site/docs/technical/gitlab/gitlab-ci.md",sourceDirName:"technical/gitlab",slug:"/technical/gitlab/gitlab-ci",permalink:"/technical/gitlab/gitlab-ci",editUrl:"https://github.com/mehmetka/notebook/blob/master/docs/technical/gitlab/gitlab-ci.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SVN to Git with Subgit for macOS",permalink:"/technical/git/svn-to-git-with-subgit"},next:{title:"Install Gitlab Runner",permalink:"/technical/gitlab/runner-install"}},p={},u=[{value:"Define these variables on Gitlab as CI/CD variables",id:"define-these-variables-on-gitlab-as-cicd-variables",level:2},{value:"Way_0",id:"way_0",level:2},{value:"Way_1",id:"way_1",level:2},{value:"Runner Script",id:"runner-script",level:2},{value:"Deploy Script (Runs on server connected with SSH)",id:"deploy-script-runs-on-server-connected-with-ssh",level:2}],b={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"deploy-with-gitlab-runner"},"Deploy with Gitlab Runner"),(0,i.kt)("h2",{id:"define-these-variables-on-gitlab-as-cicd-variables"},"Define these variables on Gitlab as CI/CD variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"PRIVATE_KEY"),(0,i.kt)("li",{parentName:"ul"},"SERVER_IP")),(0,i.kt)("h2",{id:"way_0"},"Way_0"),(0,i.kt)("p",null,".gitlab-ci.yml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'before_script:\n  - echo "$PRIVATE_KEY" > ~/generic.pem\n  - chmod 600 ~/generic.pem\n  - \'echo -e "Host *\\n\\tStrictHostKeyChecking no\\n\\n" > ~/.ssh/config\'\n\nstages:\n  - deploy\n\ndeploy:\n  only:\n    - master\n  stage: deploy\n  script:\n    - ssh -i ~/generic.pem ec2-user@$SERVER_IP "do deployment stuff"\n    - rm ~/generic.pem\n  tags:\n    - cd\n')),(0,i.kt)("h2",{id:"way_1"},"Way_1"),(0,i.kt)("p",null,".gitlab-ci.yml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"before_script:\n  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'\n\nstages:\n  - deploy\n\ndeploy-to-test:\n  only:\n    - master\n  stage: deploy\n  script:\n    - bash runner-script.sh # shell script that will run on \"deploy\" runner\n  tags:\n    - deploy # run on a specific runner\n")),(0,i.kt)("h2",{id:"runner-script"},"Runner Script"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"#!/bin/bash\n\neval $(ssh-agent -s)\necho \"$PRIVATE_KEY\" | tr -d '\\r' | ssh-add - > /dev/null\n\nmkdir -p ~/.ssh\ntouch ~/.ssh/config\necho -e \"Host *\\n\\tStrictHostKeyChecking no\\n\\n\" >> ~/.ssh/config\n\nssh username@$SERVER_IP 'bash -s' < deploy-script.sh\n")),(0,i.kt)("h2",{id:"deploy-script-runs-on-server-connected-with-ssh"},"Deploy Script (Runs on server connected with SSH)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"#!/bin/bash\n\n# deployment steps\n")))}d.isMDXComponent=!0}}]);
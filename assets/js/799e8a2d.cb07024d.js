"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[1887],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),m=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(o.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=m(n),k=a,d=s["".concat(o,".").concat(k)]||s[k]||u[k]||i;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[s]="string"==typeof e?e:a,l[1]=p;for(var m=2;m<i;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const i={tags:["vim"]},l=void 0,p={unversionedId:"technical/vim",id:"technical/vim",title:"vim",description:"set number! -> unset line numbers",source:"@site/docs/technical/vim.md",sourceDirName:"technical",slug:"/technical/vim",permalink:"/technical/vim",draft:!1,editUrl:"https://github.com/mehmetka/notebook/blob/master/docs/technical/vim.md",tags:[{label:"vim",permalink:"/tags/vim"}],version:"current",frontMatter:{tags:["vim"]},sidebar:"tutorialSidebar",previous:{title:"uncategorized",permalink:"/technical/uncategorized"}},o={},m=[],c={toc:m},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"set number! -> unset line numbers  "),(0,a.kt)("p",null,"move cursor to",(0,a.kt)("br",{parentName:"p"}),"\n","next word: w",(0,a.kt)("br",{parentName:"p"}),"\n","previous word: b "),(0,a.kt)("p",null,"delete a word: daw",(0,a.kt)("br",{parentName:"p"}),"\n","delete a letter: dw"),(0,a.kt)("p",null,"undo the last change: u"),(0,a.kt)("p",null,"print file name -> :pwd",(0,a.kt)("br",{parentName:"p"}),"\n","save as -> :w filename",(0,a.kt)("br",{parentName:"p"}),"\n","insert mode with new line: o"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},">_ Unknown")," (2023-08-10 22:52:23)"),(0,a.kt)("p",null,"tags: vim"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Vim Encryption"),(0,a.kt)("p",null,"For new file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"vim -x mynewfile  \nopens a prompt and enter the encryption key twice. and done.  \n")),(0,a.kt)("p",null,"For existing file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},":X  \nopens a prompt and enter the encryption key twice. and done.  \n")),(0,a.kt)("p",null,"Disable encryption"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},":set key=  \n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},">_ Unknown")," (2023-08-10 23:15:59)"),(0,a.kt)("p",null,"tags: vim"),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"This command will ng whitespace. To not delete lines containialso delete lines containing only whitespace, you can use \\W",(0,a.kt)("em",{parentName:"p"},', which means "zero or more whitespace characters.": :g/^\\W'),"$/d")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"This command deletes any line containing only zero or more whitespace characters. Lines that contain any other type of character are not deleted.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"^, $, *, and \\W are special metacharacters used in regular expressions.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Add every beginning of lines "//" ',(0,a.kt)("inlineCode",{parentName:"p"},":%s!^!//!"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"V select current line")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"d cut")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"y copy")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Paste before cursor: P; paste after cursor: p")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"H, 0 start of line")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"gg start of document")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"G end of document")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"$ end of line")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},":syntax off")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},":set number")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"sort and remote duplicate lines: :sort u")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Write commands in this file to run on each time: home/${whoami}/.vimrc")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},":,666d -> delete lines from current 666th line.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern"},"https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://vim.fandom.com/wiki/Search_and_replace"},"https://vim.fandom.com/wiki/Search_and_replace"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/253380/how-to-insert-text-at-beginning-of-a-multi-line-selection-in-vi-vim"},"https://stackoverflow.com/questions/253380/how-to-insert-text-at-beginning-of-a-multi-line-selection-in-vi-vim"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"For the entire file 'g', search(/) for lines containing only the beginning '^' and ending '$' of a line, and delete 'd' those lines:   "))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},":g/^$/d  \n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},">_ Unknown")," (2022-08-13 21:07:49)"),(0,a.kt)("p",null,"tags: vim"))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[6984],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(r),f=a,b=p["".concat(l,".").concat(f)]||p[f]||m[f]||o;return r?n.createElement(b,c(c({ref:t},u),{},{components:r})):n.createElement(b,c({ref:t},u))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4023:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={tags:["terraform"]},c="Create S3 Bucket",i={unversionedId:"technical/terraform/create-s3-bucket",id:"technical/terraform/create-s3-bucket",title:"Create S3 Bucket",description:'If you set \'acl = "public-read"\', your buckets give "list" permission to anybody, by default.',source:"@site/docs/technical/terraform/create-s3-bucket.md",sourceDirName:"technical/terraform",slug:"/technical/terraform/create-s3-bucket",permalink:"/technical/terraform/create-s3-bucket",draft:!1,editUrl:"https://github.com/mehmetka/notebook/blob/master/docs/technical/terraform/create-s3-bucket.md",tags:[{label:"terraform",permalink:"/tags/terraform"}],version:"current",frontMatter:{tags:["terraform"]},sidebar:"tutorialSidebar",previous:{title:"Create EC2 Instance with PHP 7.4 and apache2 Installations",permalink:"/technical/terraform/create-ec2-instance"},next:{title:"uncategorized",permalink:"/technical/uncategorized"}},l={},s=[],u={toc:s},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-s3-bucket"},"Create S3 Bucket"),(0,a.kt)("p",null,'If you set \'acl = "public-read"\', your buckets give "list" permission to anybody, by default.',(0,a.kt)("br",{parentName:"p"}),"\n",'When a bucket gives "list" permission to public, anybody can list all contents of bucket.',(0,a.kt)("br",{parentName:"p"}),"\n",'That\'s why, acl must be set as "private"'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'terraform {  \n  required_providers {  \n    aws = {  \n      source  = "hashicorp/aws"  \n      version = "~> 3.27"  \n    }  \n  }\n\n  required_version = ">= 0.14.9"  \n}\n\nprovider "aws" {  \n  profile = "default"  \n  region  = "eu-central-1"  \n}\n\nresource "aws_s3_bucket" "b" {  \n  bucket = "unique-bucket-name"  \n  acl    = "private"\n\n  cors_rule {  \n    allowed_headers = ["*"]  \n    allowed_methods = ["GET"]  \n    allowed_origins = ["*"]  \n  }  \n  tags = {  \n    Name = "bucket-tag"  \n  }  \n  policy = <<POLICY  \n  {  \n    "Version": "2012-10-17",  \n    "Statement": [  \n        {  \n            "Sid": "Statement1",  \n            "Effect": "Allow",  \n            "Principal": "*",  \n            "Action": "s3:GetObject",  \n            "Resource": "arn:aws:s3:::unique-bucket-name/*"  \n        }  \n    ]  \n}  \n  POLICY  \n}  \n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Unknown (2022-08-13 21:07:20)",(0,a.kt)("br",{parentName:"p"}),"\n","#terraform")))}m.isMDXComponent=!0}}]);
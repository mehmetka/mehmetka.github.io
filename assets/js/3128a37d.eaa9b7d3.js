"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[5993],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=p(n),d=r,k=s["".concat(c,".").concat(d)]||s[d]||u[d]||i;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={tags:["technical","vim"]},l="notes",o={unversionedId:"technical/vim/uncategorized",id:"technical/vim/uncategorized",title:"notes",description:'- This command will ng whitespace. To not delete lines containialso delete lines containing only whitespace, you can use \\W, which means "zero or more whitespace characters."g/^\\W$/d',source:"@site/docs/technical/vim/uncategorized.md",sourceDirName:"technical/vim",slug:"/technical/vim/uncategorized",permalink:"/technical/vim/uncategorized",draft:!1,editUrl:"https://github.com/mehmetka/notebook/blob/master/docs/technical/vim/uncategorized.md",tags:[{label:"technical",permalink:"/tags/technical"},{label:"vim",permalink:"/tags/vim"}],version:"current",frontMatter:{tags:["technical","vim"]},sidebar:"tutorialSidebar",previous:{title:"vim",permalink:"/category/vim"}},c={},p=[],m={toc:p},s="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"notes"},"notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This command will ng whitespace. To not delete lines containialso delete lines containing only whitespace, you can use \\W",(0,r.kt)("em",{parentName:"p"},', which means "zero or more whitespace characters.": :g/^\\W'),"$/d")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This command deletes any line containing only zero or more whitespace characters. Lines that contain any other type of character are not deleted.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"^, $, *, and \\W are special metacharacters used in regular expressions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Add every beginning of lines "//" ',(0,r.kt)("inlineCode",{parentName:"p"},":%s!^!//!"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"V select current line")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"d cut")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"y copy")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Paste before cursor: P; paste after cursor: p")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"H, 0 start of line")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"gg start of document")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"G end of document")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"$ end of line")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},":syntax off")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},":set number")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sort and remote duplicate lines: :sort u")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Write commands in this file to run on each time: home/${whoami}/.vimrc")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},":,666d -> delete lines from current 666th line.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern"},"https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://vim.fandom.com/wiki/Search_and_replace"},"https://vim.fandom.com/wiki/Search_and_replace"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/253380/how-to-insert-text-at-beginning-of-a-multi-line-selection-in-vi-vim"},"https://stackoverflow.com/questions/253380/how-to-insert-text-at-beginning-of-a-multi-line-selection-in-vi-vim"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For the entire file 'g', search(/) for lines containing only the beginning '^' and ending '$' of a line, and delete 'd' those lines:   "))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},":g/^$/d  \n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},">_ Unknown")," (2022-08-13 21:07:49)"),(0,r.kt)("p",null,"tags: technical, vim"))}u.isMDXComponent=!0}}]);
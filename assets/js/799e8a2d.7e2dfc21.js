"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[1887],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=c(n),k=r,d=s["".concat(o,".").concat(k)]||s[k]||u[k]||i;return n?a.createElement(d,l(l({ref:t},m),{},{components:n})):a.createElement(d,l({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[s]="string"==typeof e?e:r,l[1]=p;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={tags:["technical","vim"]},l=void 0,p={unversionedId:"technical/vim",id:"technical/vim",title:"vim",description:"set number! -> unset line numbers",source:"@site/docs/technical/vim.md",sourceDirName:"technical",slug:"/technical/vim",permalink:"/technical/vim",draft:!1,editUrl:"https://github.com/mehmetka/notebook/blob/master/docs/technical/vim.md",tags:[{label:"technical",permalink:"/tags/technical"},{label:"vim",permalink:"/tags/vim"}],version:"current",frontMatter:{tags:["technical","vim"]},sidebar:"tutorialSidebar",previous:{title:"uncategorized",permalink:"/technical/uncategorized"}},o={},c=[],m={toc:c},s="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"set number! -> unset line numbers  "),(0,r.kt)("p",null,"move cursor to",(0,r.kt)("br",{parentName:"p"}),"\n","next word: w",(0,r.kt)("br",{parentName:"p"}),"\n","previous word: b "),(0,r.kt)("p",null,"delete a word: daw",(0,r.kt)("br",{parentName:"p"}),"\n","delete a letter: dw"),(0,r.kt)("p",null,"undo the last change: u"),(0,r.kt)("p",null,"print file name -> :pwd",(0,r.kt)("br",{parentName:"p"}),"\n","save as -> :w filename",(0,r.kt)("br",{parentName:"p"}),"\n","insert mode with new line: o"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},">_ Unknown")," (2023-08-10 22:52:23)"),(0,r.kt)("p",null,"tags: technical, vim"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Vim Encryption"),(0,r.kt)("p",null,"For new file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vim -x mynewfile  \nopens a prompt and enter the encryption key twice. and done.  \n")),(0,r.kt)("p",null,"For existing file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},":X  \nopens a prompt and enter the encryption key twice. and done.  \n")),(0,r.kt)("p",null,"Disable encryption"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},":set key=  \n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},">_ Unknown")," (2023-08-10 23:15:59)"),(0,r.kt)("p",null,"tags: technical, vim"),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This command will ng whitespace. To not delete lines containialso delete lines containing only whitespace, you can use \\W",(0,r.kt)("em",{parentName:"p"},', which means "zero or more whitespace characters.": :g/^\\W'),"$/d")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This command deletes any line containing only zero or more whitespace characters. Lines that contain any other type of character are not deleted.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"^, $, *, and \\W are special metacharacters used in regular expressions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Add every beginning of lines "//" ',(0,r.kt)("inlineCode",{parentName:"p"},":%s!^!//!"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"V select current line")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"d cut")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"y copy")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Paste before cursor: P; paste after cursor: p")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"H, 0 start of line")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"gg start of document")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"G end of document")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"$ end of line")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},":syntax off")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},":set number")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sort and remote duplicate lines: :sort u")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Write commands in this file to run on each time: home/${whoami}/.vimrc")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},":,666d -> delete lines from current 666th line.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern"},"https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://vim.fandom.com/wiki/Search_and_replace"},"https://vim.fandom.com/wiki/Search_and_replace"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/253380/how-to-insert-text-at-beginning-of-a-multi-line-selection-in-vi-vim"},"https://stackoverflow.com/questions/253380/how-to-insert-text-at-beginning-of-a-multi-line-selection-in-vi-vim"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For the entire file 'g', search(/) for lines containing only the beginning '^' and ending '$' of a line, and delete 'd' those lines:   "))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},":g/^$/d  \n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},">_ Unknown")," (2022-08-13 21:07:49)"),(0,r.kt)("p",null,"tags: technical, vim"))}u.isMDXComponent=!0}}]);
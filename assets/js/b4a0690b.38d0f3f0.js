"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[865],{3905:function(e,t,i){i.d(t,{Zo:function(){return c},kt:function(){return p}});var r=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,r,a=function(e,t){if(null==e)return{};var i,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var i=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=u(i),p=a,k=g["".concat(s,".").concat(p)]||g[p]||m[p]||n;return i?r.createElement(k,l(l({ref:t},c),{},{components:i})):r.createElement(k,l({ref:t},c))}));function p(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=i.length,l=new Array(n);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<n;u++)l[u]=i[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,i)}g.displayName="MDXCreateElement"},4003:function(e,t,i){i.r(t),i.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return m}});var r=i(7462),a=i(3366),n=(i(7294),i(3905)),l=["components"],o={},s="Notes",u={unversionedId:"technical/git/notes",id:"technical/git/notes",title:"Notes",description:"- Commit count: `git log --oneline --all | wc -l`",source:"@site/docs/technical/git/notes.md",sourceDirName:"technical/git",slug:"/technical/git/notes",permalink:"/technical/git/notes",editUrl:"https://github.com/mehmetka/notebook/blob/master/docs/technical/git/notes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Github Flow",permalink:"/technical/git/githubflow"},next:{title:"SVN to Git with Subgit for macOS",permalink:"/technical/git/svn-to-git-with-subgit"}},c={},m=[{value:"Huseyin Babal - Using Git Like a Hero",id:"huseyin-babal---using-git-like-a-hero",level:2}],g={toc:m};function p(e){var t=e.components,o=(0,a.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"notes"},"Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Commit count: ",(0,n.kt)("inlineCode",{parentName:"li"},"git log --oneline --all | wc -l")),(0,n.kt)("li",{parentName:"ul"},"Change committer name: vim ~./gitconfig"),(0,n.kt)("li",{parentName:"ul"},'Run commands after "git pull": .git/hooks/post-merge (file should be executable)'),(0,n.kt)("li",{parentName:"ul"},"Commits that waiting to be pushed: git cherry -v"),(0,n.kt)("li",{parentName:"ul"},"Remove a file from staging area: $ git reset HEAD filename.sql"),(0,n.kt)("li",{parentName:"ul"},"Undo last commit: $ git reset HEAD~"),(0,n.kt)("li",{parentName:"ul"},"If you don't specify your global email address, Github does not show your commits on your activity graph (git config --global user.email)"),(0,n.kt)("li",{parentName:"ul"},"git clone --recurse-submodules {scm-host}")),(0,n.kt)("h2",{id:"huseyin-babal---using-git-like-a-hero"},"Huseyin Babal - Using Git Like a Hero"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Dagitik: lokalinizde olan bir git vardir, bir de "remote" vardir. dagitik bir yapi vardir.'),(0,n.kt)("li",{parentName:"ul"},"Projenin snapshot'ini tutar")),(0,n.kt)("p",null,"3 tane Git alani var:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Working: git'le ilgili hicbir sey yapmadan degisiklikler yapmak. dosya eklemek vs."),(0,n.kt)("li",{parentName:"ul"},'Staging: "git add " yaptiktan sonraki asama, degisiklikleri aldigimiz yer'),(0,n.kt)("li",{parentName:"ul"},"Repo: commit'leyince bu asamaya gecilir.")),(0,n.kt)("p",null,"Git Objects:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Blob: this is created once you staged changes. working areadan, staging area'ya geciste bir blob objesi yaratilir."),(0,n.kt)("li",{parentName:"ul"},"Tree: keeps references to child blobs or trees."),(0,n.kt)("li",{parentName:"ul"},"Commit: something like tree, but also contains commit info like author, committer, message --- tree ile ayni ama en tepede.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"# Commit \nTree: 1abc3\nAuthor: hbabal\nCommitter: Linux\nMessage: commit msg\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"her objenin bir commit id'si(hash) var."),(0,n.kt)("li",{parentName:"ul"},"git add -> bu bir objedir, blob."),(0,n.kt)("li",{parentName:"ul"},"HashTree or MerkleTree is used as data structure to store Git Objects properly."),(0,n.kt)("li",{parentName:"ul"},"rolling hash denen bir algoritma grubu var, git arka planda bu grubu kullaniyor."),(0,n.kt)("li",{parentName:"ul"},"svn ve cvs -> delta tutuyor, git'te snapshot tutuyor."),(0,n.kt)("li",{parentName:"ul"},"ayni icerige sahip iki dosya git icin tek bir objedir. / ayni icerige sahip dosyalar icin blob yaratmiyor."),(0,n.kt)("li",{parentName:"ul"},"git sikistirma kullaniyor."),(0,n.kt)("li",{parentName:"ul"},"git diff: it compares working area and staging area."),(0,n.kt)("li",{parentName:"ul"},"git diff --staged -> compares staging area and repo area."),(0,n.kt)("li",{parentName:"ul"},"HEAD -> en guncel hali nereye point ediyorsa HEAD orayi gosterir."),(0,n.kt)("li",{parentName:"ul"},"git reset --hard HEAD --\x3e git add yapilanlari working areaya gonderir."),(0,n.kt)("li",{parentName:"ul"},"git reset --hard HEAD -> means clear everything which is not committed yet."),(0,n.kt)("li",{parentName:"ul"},"git reset -> reverts everything on staging back to working area."),(0,n.kt)("li",{parentName:"ul"},"merge'de ayri bir merge commit olusturulur."),(0,n.kt)("li",{parentName:"ul"},"rebase'de yeni gelen commit'leri ekler. "),(0,n.kt)("li",{parentName:"ul"},"git show 3392 // directory ve file hashlerini yazdik."),(0,n.kt)("li",{parentName:"ul"},"staging'dekileri repo'ya eklemek icin: git commit."),(0,n.kt)("li",{parentName:"ul"},"upstream -> projenin asil kaynagi."),(0,n.kt)("li",{parentName:"ul"},"Git storage cost: ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"since git takes a snapshot of your project with changeset when you commit to repo, can we say total size of git storage = # of commit X av(commit size)?"),(0,n.kt)("li",{parentName:"ul"},"Answer: No, git uses compression algorithm to compress nearly similar files, it is smarter than you think.")))),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"hbabal-using-git-like-a-hero",src:i(5545).Z,width:"1281",height:"740"})))}p.isMDXComponent=!0},5545:function(e,t,i){t.Z=i.p+"assets/images/hbabal-using-git-like-a-hero-308862f648723b1dfd7694f2d7b0e1bb.png"}}]);
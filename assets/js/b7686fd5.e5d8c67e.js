"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[3931],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),h=a,d=p["".concat(s,".").concat(h)]||p[h]||m[h]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6756:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={tags:["technical","git"]},i="Github Flow",l={unversionedId:"technical/git/githubflow",id:"technical/git/githubflow",title:"Github Flow",description:"The Feature Branch Workflow assumes a central repository and master represents the official project history. Instead of",source:"@site/docs/technical/git/githubflow.md",sourceDirName:"technical/git",slug:"/technical/git/githubflow",permalink:"/technical/git/githubflow",draft:!1,editUrl:"https://github.com/mehmetka/notebook/blob/master/docs/technical/git/githubflow.md",tags:[{label:"technical",permalink:"/tags/technical"},{label:"git",permalink:"/tags/git"}],version:"current",frontMatter:{tags:["technical","git"]},sidebar:"tutorialSidebar",previous:{title:"Git Flow",permalink:"/technical/git/gitflow"},next:{title:"SVN to Git with Subgit for macOS",permalink:"/technical/git/svn-to-git-with-subgit"}},s={},c=[{value:"Advantages",id:"advantages",level:2},{value:"Disadvantages",id:"disadvantages",level:2},{value:"Sources",id:"sources",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"github-flow"},"Github Flow"),(0,a.kt)("p",null,"The Feature Branch Workflow assumes a central repository and master represents the official project history. Instead of",(0,a.kt)("br",{parentName:"p"}),"\n","committing directly on the master branch, developers can create a new branch every time they start work on a new",(0,a.kt)("br",{parentName:"p"}),"\n","feature. Feature branches should have descriptive names."),(0,a.kt)("p",null,"The suggested way to utilize this type of workflow would follow a hierarchal method that distinguishes between various",(0,a.kt)("br",{parentName:"p"}),"\n","levels of staff.",(0,a.kt)("br",{parentName:"p"}),"\n","Before a branch is merged to master, it needs to be verified and checked for errors:",(0,a.kt)("br",{parentName:"p"}),"\n","Junior developers can create a merge request and assign it to one of the senior developers. The Seniors in turn can",(0,a.kt)("br",{parentName:"p"}),"\n","review the code and leave any necessary comments. If everything seems satisfactory to move forward, the request is",(0,a.kt)("br",{parentName:"p"}),"\n","accepted and the branch is merged."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Anything in the master branch is deployable and is stable.  "),(0,a.kt)("li",{parentName:"ol"},"To work on something new, create a branch off from master and given a descriptive name(ie: ui-upgrade).  "),(0,a.kt)("li",{parentName:"ol"},"Also, you can create branches from the existing feature branch.  "),(0,a.kt)("li",{parentName:"ol"},"Commit to that branch locally and regularly push your work to the same-named branch on the server.  "),(0,a.kt)("li",{parentName:"ol"},"When you need feedback or help, or you think the branch is ready for merging, open a pull request.  "),(0,a.kt)("li",{parentName:"ol"},"After someone else has reviewed and signed off on the feature, you can merge it into master.  "),(0,a.kt)("li",{parentName:"ol"},"Once it is merged and pushed to master, Your feature is ready for deployment.")),(0,a.kt)("h2",{id:"advantages"},"Advantages"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"it is friendly for the Continuous Delivery and Continuous Integration"),(0,a.kt)("li",{parentName:"ul"},"A simpler alternative to Git Flow"),(0,a.kt)("li",{parentName:"ul"},"It is ideal when it needs to maintain a single version in production")),(0,a.kt)("h2",{id:"disadvantages"},"Disadvantages"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The production code can become unstable most easily"),(0,a.kt)("li",{parentName:"ul"},"Are not adequate when it needs the release plans"),(0,a.kt)("li",{parentName:"ul"},"It doesn't resolve anything about deploy, environments, releases, and issues"),(0,a.kt)("li",{parentName:"ul"},"It isn't recommended when multiple versions in production are needed.")),(0,a.kt)("h2",{id:"sources"},"Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow"},"https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://medium.com/@patrickporto/4-branching-workflows-for-git-30d0aaee7bf"},"https://medium.com/@patrickporto/4-branching-workflows-for-git-30d0aaee7bf"))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},">_ Unknown")," (2022-08-13 21:00:12)"),(0,a.kt)("p",null,"tags: technical, git"))}m.isMDXComponent=!0}}]);